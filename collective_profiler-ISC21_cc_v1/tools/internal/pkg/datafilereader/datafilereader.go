//
// Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
//
// See LICENSE.txt for license information
//

package datafilereader

import (
	"fmt"
	"path/filepath"
	"strconv"
	"strings"
)

func GetStatsFilePath(basedir string, jobid int, rank int) string {
	return filepath.Join(basedir, fmt.Sprintf("stats-job%d-rank%d.md", jobid, rank))
}

func getIDsFromFileNames(files []string, id string) ([]int, error) {
	var ids []int
	for _, file := range files {
		tokens := strings.Split(filepath.Base(file), ".")
		for _, t := range tokens {
			if strings.Contains(t, id) {
				t = strings.ReplaceAll(t, id, "")
				id, err := strconv.Atoi(t)
				if err != nil {
					return ids, err
				}
				found := false
				for _, i := range ids {
					if i == id {
						found = true
					}
				}
				if !found {
					ids = append(ids, id)
				}
				break
			}
		}
	}

	return ids, nil
}

// GetRanksFromFileNames parses the filename of files generated by the profiling
// infrastructure and returns the associated ranks
func GetRanksFromFileNames(files []string) ([]int, error) {
	return getIDsFromFileNames(files, "rank")
}

// GetJobIDsFromFileNames parses the filename of files generated by the profiling
// infrastructure and returns the associated jobids
func GetJobIDsFromFileNames(files []string) ([]int, error) {
	return getIDsFromFileNames(files, "job")
}
